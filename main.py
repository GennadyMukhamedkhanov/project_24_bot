
import time
import telebot
import poetry
import counting
import random
from telebot import types
You = 0
BOT = 0
Name = ''
count_you = 0
count_bot = 0
dict_of_clients = {}
dict_of_clients_sort = {}
TOKEN = "6292419420:AAHss-etOCeORRrkkqapCQgRxKSkrFtJXAg"
bot = telebot.TeleBot(TOKEN)


answers = {'–∫–∞–∫ –¥–µ–ª–∞?': '–£ –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ!', '–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?': '–ú–µ–Ω—è –∑–æ–≤—É—Ç Telebot )))',
           '–∫–∞–∫–æ–π —Å–µ–≥–æ–¥–Ω—è –≥–æ–¥?': '–°–µ–π—á–∞—Å 2023 –≥–æ–¥', '–∫—Ç–æ —Ç–µ–±—è —Å–æ–∑–¥–∞–ª?': '–ú–µ–Ω—è —Å–æ–∑–¥–∞–ª –∫–∞–∫–æ–π-—Ç–æ —Ö–æ—Ä–æ—à–∏–π –ø–∞—Ä–µ–Ω–µ–∫'}


@bot.message_handler(commands=['start'])
def help(message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton(text='/list')
    btn2 = types.KeyboardButton(text='/foto')
    btn3 = types.KeyboardButton(text='/video')
    btn4 = types.KeyboardButton(text='/play')
    kb.add(btn1, btn2, btn3, btn4)
    bot.send_message(message.chat.id, '–ü–æ–≥–Ω–∞–ª–∏...', reply_markup=kb)


@bot.message_handler(commands=['video'])
def help(message):
    kb = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton(text='–Æ—Ç—É–±', url='https://www.youtube.com/')
    btn2 = types.InlineKeyboardButton(text='–Ø–Ω–¥–µ–∫—Å', url='https://ya.ru/video/')
    kb.add(btn1, btn2)
    bot.send_message(message.chat.id, '–í–∏–¥–µ–æ', reply_markup=kb)


@bot.message_handler(commands=['list'])
def help(message):
    bot.send_message(message.chat.id, '<b>–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∫ –±–æ—Ç—É:</b>', parse_mode='HTML')
    bot.send_message(message.chat.id, '<i>–∫–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?</i>', parse_mode='HTML')
    for i in answers:
        bot.send_message(message.chat.id, f'<i>{i}</i>', parse_mode='HTML')


@bot.message_handler(commands=['foto'])
def foto(message):
    #file = open("templates/foto.png", 'rb')
    #bot.send_photo(message.chat.id, file, '–≠—Ç–æ —Ñ–æ—Ç–æ')
    # –∏–ª–∏ —Ç–∞–∫:
    bot.send_photo(message.chat.id, r'https://vsegda-pomnim.com/uploads/posts/2022-04/1649112612_32-vsegda-pomnim-com-p-chudesnii-mir-prirodi-foto-35.jpg', '–≠—Ç–æ —Ç–æ–∂–µ —Ñ–æ—Ç–æ')
    #file.close()


# Callback –∫–Ω–æ–ø–∫–∏
@bot.message_handler(commands=['play'])
def foto(message):
    global Name
    Name = (message.from_user.first_name)
    if message.from_user.id == 241468532:
        dict_of_clients[Name] =  count_you
        dict_of_clients['–±–æ—Ç'] = count_bot
        kb = types.InlineKeyboardMarkup(row_width=3)
        btn1 = types.InlineKeyboardButton(text='ü™®', callback_data='btn1')
        btn2 = types.InlineKeyboardButton(text='‚úÇÔ∏è', callback_data='btn2')
        btn3 = types.InlineKeyboardButton(text='üìÉ', callback_data='btn3')
        count = types.InlineKeyboardButton(text='–û–±—â–∏–π —Å—á–µ—ÇüßÆ', callback_data='count')
        count_my = types.InlineKeyboardButton(text='–ú–æ–π —Å—á–µ—ÇüßÆ', callback_data='count_my')
        reset = types.InlineKeyboardButton(text='–°–±—Ä–æ—Å –æ–±—â–µ–≥–æ —Å—á–µ—Ç–∞ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤', callback_data='resen')
        reset_my = types.InlineKeyboardButton(text='–°–±—Ä–æ—Å —Å—á–µ—Ç–∞ –º–æ–µ–π –∏–≥—Ä—ã', callback_data='resen_my')
        statistics = types.InlineKeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='statistics')
        kb.add(btn1, btn2, btn3, count, count_my, reset, reset_my, statistics)
        bot.send_message(message.chat.id, '–ò–≥—Ä–∞ –∫–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞', reply_markup=kb)
    else:
        dict_of_clients[Name] = count_you
        dict_of_clients['–±–æ—Ç'] = count_bot
        kb = types.InlineKeyboardMarkup(row_width=3)
        btn1 = types.InlineKeyboardButton(text='ü™®', callback_data='btn1')
        btn2 = types.InlineKeyboardButton(text='‚úÇÔ∏è', callback_data='btn2')
        btn3 = types.InlineKeyboardButton(text='üìÉ', callback_data='btn3')
        count = types.InlineKeyboardButton(text='–û–±—â–∏–π —Å—á–µ—ÇüßÆ', callback_data='count')
        count_my = types.InlineKeyboardButton(text='–ú–æ–π —Å—á–µ—ÇüßÆ', callback_data='count_my')
        reset_my = types.InlineKeyboardButton(text='–°–±—Ä–æ—Å —Å—á–µ—Ç–∞ –º–æ–µ–π –∏–≥—Ä—ã', callback_data='resen_my')
        statistics = types.InlineKeyboardButton(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='statistics')
        kb.add(btn1, btn2, btn3, count, count_my, reset_my, statistics)
        bot.send_message(message.chat.id, '–ò–≥—Ä–∞ –∫–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞', reply_markup=kb)


@bot.callback_query_handler(func=lambda call: call.data)
def callback(call):
    global You, BOT, count_you, count_bot
    if call.message:
        if call.data == 'btn1':
            stone = counting.count('–∫–∞–º–µ–Ω—å')
            if stone == '–¢—ã –≤—ã–∏–≥—Ä–∞–ª':
                You += 1
                count_you += 1
                dict_of_clients[Name] = count_you
            elif stone == '–í—ã–∏–≥—Ä–∞–ª –ë–û–¢':
                BOT += 1
                count_bot += 1
                dict_of_clients['–±–æ—Ç'] = count_bot
            bot.send_message(call.message.chat.id, stone)
        elif call.data == 'btn2':
            scissors = counting.count('–Ω–æ–∂–Ω–∏—Ü—ã')
            if scissors == '–¢—ã –≤—ã–∏–≥—Ä–∞–ª':
                You += 1
                count_you += 1
                dict_of_clients[Name] = count_you
            elif scissors == '–í—ã–∏–≥—Ä–∞–ª –ë–û–¢':
                BOT += 1
                count_bot += 1
                dict_of_clients['–±–æ—Ç'] = count_bot
            bot.send_message(call.message.chat.id, scissors)
        elif call.data == 'btn3':
            paper = counting.count('–±—É–º–∞–≥–∞')
            if paper == '–¢—ã –≤—ã–∏–≥—Ä–∞–ª':
                You += 1
                count_you += 1
                dict_of_clients[Name] = count_you
            elif paper == '–í—ã–∏–≥—Ä–∞–ª –ë–û–¢':
                BOT += 1
                count_bot += 1
                dict_of_clients['–±–æ—Ç'] = count_bot
            bot.send_message(call.message.chat.id, paper)
        elif call.data == 'count':
            bot.send_message(call.message.chat.id, '-----------------------------------')
            bot.send_message(call.message.chat.id, f'–û–±—â–µ–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ —É –∏–≥—Ä–∞–∫–æ–≤: {You} ')
            bot.send_message(call.message.chat.id, f'–û–±—â–µ–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤ —É –±–æ—Ç–∞: {BOT}')
        elif call.data == 'count_my':
            bot.send_message(call.message.chat.id, '-----------------------------------')
            bot.send_message(call.message.chat.id, f'{Name}: {dict_of_clients[Name]} ')
           # Todo –Ω–∞–ø–∏—Å–∞—Ç—å –∏–º—è –±–æ—Ç–∞ (—Ç.–µ. —Å–ª–æ–≤–æ –ë–æ—Ç —Å—Ç–æ–ª—å–∫–æ—Ç–æ –æ—á–∫–æ–≤) 138 —Å—Ç—Ä–æ–∫–∞ –Ω–µ —Å—Ç—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç
            #bot.send_message(call.message.chat.id, dict_of_clients['–±–æ—Ç'])
            bot.send_message(call.message.chat.id, f'–ë–æ—Ç: {dict_of_clients["–±–æ—Ç"]}')

        elif call.data == 'statistics':
            bot.send_message(call.message.chat.id, '-----------------------------------')
            dict_of_clients_sort = sorted(dict_of_clients, key=dict_of_clients.get)
            for name in reversed(dict_of_clients_sort):
                bot.send_message(call.message.chat.id, f' {name}: {dict_of_clients[name]} ')
        elif call.data == 'resen':
            You = 0
            BOT = 0
            for name in dict_of_clients:
                dict_of_clients[name] = 0
        elif call.data == 'resen_my':
            count_you = 0
            count_bot = 0
            dict_of_clients[Name] = count_you


@bot.message_handler()
def help(message):
    if message.text.lower() in answers.keys():
        bot.reply_to(message, answers[message.text.lower()])
    elif message.text.lower() == '–∫–∞–∫ –º–µ–Ω—è –∑–æ–≤—É—Ç?':
        bot.reply_to(message, f'–¢–µ–±—è –∑–æ–≤—É—Ç {message.from_user.first_name} ')
    elif message.text.lower() == '—Å—Ç–∏—Ö–∏':
        # Todo –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —Ä–∞–Ω–¥–æ–º –≤ —Ñ—É–Ω–∫—Ü–∏—é —á—Ç–æ –±—ã —Å—Ç–∏—Ö –≤—ã–¥–∞–≤–∞–ª—Å—è –≤—ã–∑–æ–≤–æ–º —Ñ—É–Ω–∫—Ü–∏–∏
        t = random.randint(1, 5)
        bot.reply_to(message, poetry.st(t))
    else:
        bot.send_message(message.chat.id, "–¢–∞–∫–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –Ω–µ—Ç –≤ –º–æ–µ–º —Å–ø–∏—Å–∫–µ")
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /start –∏–ª–∏ /list –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–µ—Ä–µ—á–µ—Ç—å –∑–∞–ø—Ä–æ—Å–æ–≤")
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É /foto –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–æ—Ç–æ")
        bot.send_message(message.chat.id, "–ò–≥—Ä–∞ –≤—ã–±–µ—Ä–∏ /play")
        bot.send_message(message.chat.id, "–õ–∏–±–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å '—Å—Ç–∏—Ö–∏' –∏ –Ω–∞—Å–ª–∞–¥–∏—Ç–µ—Å—å –ø–æ—ç–∑–∏–µ–π")


while True:
    try:
        bot.infinity_polling()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ {e}")
        time.sleep(15)